<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.etycx.system.mapper.AppointmentMapper">
    
    <resultMap type="Appointment" id="AppointmentResult">
        <result property="id"    column="id"    />
        <result property="name"    column="name"    />
        <result property="mobile"    column="mobile"    />
        <result property="age"    column="age"    />
        <result property="createTime"    column="create_time"    />
    </resultMap>
	
	<sql id="selectAppointmentVo">
        select id, name, mobile, age, create_time from appointment
    </sql>
	
    <select id="selectAppointmentList" parameterType="Appointment" resultMap="AppointmentResult">
        <include refid="selectAppointmentVo"/>
        <where>  
            <if test="id != null "> and id = #{id}</if>
             <if test="name != null  and name != '' "> and name = #{name}</if>
             <if test="mobile != null  and mobile != '' "> and mobile = #{mobile}</if>
             <if test="age != null "> and age = #{age}</if>
             <if test="createTime != null "> and create_time = #{createTime}</if>
         </where>
    </select>
    
    <select id="selectAppointmentById" parameterType="Integer" resultMap="AppointmentResult">
        <include refid="selectAppointmentVo"/>
        where id = #{id}
    </select>
        
    <insert id="insertAppointment" parameterType="Appointment" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO `appointment` ( `name`, `mobile`, `age`, `create_time`) VALUES (#{name}, #{mobile},#{age}, now());
    </insert>
	 
    <update id="updateAppointment" parameterType="Appointment">
        update appointment
        <trim prefix="SET" suffixOverrides=",">
            <if test="name != null  and name != ''  ">name = #{name},</if>
            <if test="mobile != null  and mobile != ''  ">mobile = #{mobile},</if>
            <if test="age != null  ">age = #{age},</if>
            <if test="createTime != null  ">create_time = #{createTime},</if>
        </trim>
        where id = #{id}
    </update>

	<delete id="deleteAppointmentById" parameterType="Integer">
        delete from appointment where id = #{id}
    </delete>
	
    <delete id="deleteAppointmentByIds" parameterType="String">
        delete from appointment where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
    
</mapper>